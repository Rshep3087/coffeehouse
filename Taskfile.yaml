# https://taskfile.dev

version: "3"

tasks:
  cleanup:
    desc: Remove the docker containers and volumes
    cmds:
      - docker compose down -v

  digitalsign:
    desc: Runs the digital sign TUI application
    cmds:
      - go build -o digitalsign ./cmd/digitalsign && ./digitalsign

  kompose:
    desc: Convert docker-compose to kubernetes manifests
    cmds:
      - kompose convert -o k8s

  local-dev:
    desc: Run the server with docker-composes
    env:
      DOCKER_BUILDKIT: 1
    cmds:
      - docker compose up -d db
      - sleep 3 # wait for the database to start
      - task: db:migrate
      - docker compose up --build -d coffeehouse nats redis jaeger otel-collector
      - sleep 1
      - docker logs --follow coffeehouse-coffeehouse-1

  db:migrate:
    desc: Run the database migrations with docker
    cmds:
      - docker run -v $(pwd)/sql/schema:/migrations --network host migrate/migrate -path=/migrations/ -database postgres://user:password@localhost:5432/coffeehousedb?sslmode=disable up
  
  db:rollback:
    desc: Rollback the database migrations
    cmds:
      - docker run -v $(pwd)/sql/schema:/migrations --network host migrate/migrate -path=/migrations/ -database postgres://user:password@localhost:5432/coffeehousedb?sslmode=disable down 1

  db:force:
    desc: Force the database version to N
    cmds:
      - docker run -v $(pwd)/sql/schema:/migrations --network host migrate/migrate -path=/migrations/ -database postgres://user:password@localhost:5432/coffeehousedb?sslmode=disable force {{.CLI_ARGS}}

  db:new_migration:
    desc: Create a new migration
    cmds:
      - migrate create -ext sql -dir sql/schema -seq {{.CLI_ARGS}}
    
  pgcli:
    desc: Connect to the PostgreSQL database
    env:
      PGPASSWORD: password
    cmds:
      - pgcli -h localhost -U user -d coffeehousedb -w

  run:
    desc: Run the server application
    env:
      COFFEEHOUSE_DB_USER: user
      COFFEEHOUSE_DB_PASSWORD: password
    cmds:
      - go run ./cmd/server --db-tls false
